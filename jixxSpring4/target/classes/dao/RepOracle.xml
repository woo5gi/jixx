<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kitri.project.repository.Mapper">
	<resultMap type="vo.Repository" id="RepResultMap">
		<result property="rep_id" column="rep_id" />
		<result property="rep_name" column="rep_name" />
		<result property="rep_url" column="rep_url" />
	</resultMap>
	<resultMap type="vo.Channel" id="ChResultMap">
		<result property="ch_id" column="channel_id" />
		<result property="ch_name" column="channel_name" />
		<result property="ch_type" column="channel_type" />
		<result property="ch_status" column="channel_status" />
		<result property="rep_id" column="rep_id" />
	</resultMap>
	<resultMap type="vo.Member" id="MemberResultMap">
		<result property="id" column="user_id" />
		<result property="email" column="user_email" />
		<result property="pwd" column="user_pass" />
		<result property="name" column="user_name" />
		<result property="tempkey" column="user_tempkey" />
		<result property="auth" column="user_auth" />
	</resultMap>

	<select id="getRepositoryByUrl" parameterType="vo.Repository"
		resultMap="RepResultMap">
		select * from repository where rep_url=#{rep_url}
	</select>
	<insert id="insertRep" parameterType="vo.Repository">
		insert into repository
		values((select max(rep_id)+1 from repository),
		#{rep_name}, #{rep_url})
	</insert>
	<select id="getRepositoryByName" parameterType="vo.Repository"
		resultMap="RepResultMap">
		select * from repository where rep_id=#{rep_id}
	</select>
	<select id="selectRepByRep" parameterType="vo.Repository"
		resultMap="RepResultMap">
		select rep_id from repository where rep_url=#{rep_url}
	</select>
	<insert id="insertCh" parameterType="vo.Repository">
		insert into channel
		values((select max(channel_id)+1 from
		channel),'general',1,1,#{rep_id})
	</insert>
	<insert id="insertCh2" parameterType="map">
		insert into channel
		values((select max(channel_id)+1 from
		channel),#{chtitle},1,1,#{rep_id})
	</insert>
	<select id="getChByRepId" parameterType="vo.Repository"
		resultMap="ChResultMap">
		select * from channel where rep_id=#{rep_id}
	</select>
	<insert id="insertUserMeta" parameterType="map">
		insert into user_meta
		values(#{user_id},#{rep_id},3,#{ch_id},1)
	</insert>
	<insert id="insertUserMetaCreateChannel" parameterType="map">
		<foreach collection="user_id" item="type">
			insert into user_meta
			values(#{type.value},#{rep_id},3,#{ch_id},1)
		</foreach>
	</insert>
	<insert id="insertUserMetaCreateChannel1" parameterType="map">
		insert
		into user_meta values(#{user_id},#{rep_id},3,#{ch_id},1)
	</insert>

	<insert id="insertUserMetaInvite" parameterType="map">
		insert into
		user_meta values(#{user_id},#{rep_id},1,#{ch_id},1)
	</insert>
	<insert id="insertBoard" parameterType="map">
		insert into post
		values((select max(post_id)+1 from post),null,#{nickname},
		'jixx 저장소에
		오신것을 환영합니다', #{user_id}, sysdate,null,null,null,1,#{ch_id})
	</insert>
	<select id="getNameById" parameterType="Integer"
		resultMap="MemberResultMap">
		select user_name from member where user_id=#{id}
	</select>
	<insert id="insertMember" parameterType="map">
		insert into member
		values((select max(user_id)+1 from
		member),#{email},#{pwd},#{name},'',default)
	</insert>
	<select id="selectRepIdByRepNameUserMeta" parameterType="String"
		resultType="Integer">
		select um.rep_id from user_meta um,repository r where
		um.rep_id=r.rep_id and
		r.rep_name=#{rep_name}
	</select>
	<select id="selectChIdList" parameterType="Integer"
		resultType="java.lang.Integer">
		select channel_id from channel where rep_id=#{rep_id} order by channel_id 
	</select>
	<select id="selectChList" parameterType="Integer"
		resultMap="ChResultMap">
		select * from channel where rep_id=#{rep_id} order by channel_id
	</select>
	<select id="selectUserIdByEmail" parameterType="String"
		resultMap="MemberResultMap">
		select * from member where user_email=#{email}
	</select>
	<select id="selectUserList" parameterType="Integer"
		resultType="java.lang.Integer">
		select distinct(user_id) from user_meta where
		rep_id=#{rep_id}
	</select>
	<select id="selectUserNameList" parameterType="map"
		resultType="java.lang.String">
		select
		user_name
		from
		member
		where user_id in
		<foreach collection="user_id" item="type" open="(" close=")"
			separator=",">
			#{type.value}
		</foreach>
	</select>
	<select id="selectRepository" parameterType="Integer"
		resultMap="RepResultMap">
		select * from repository where rep_id=#{rep_id}
	</select>
	<select id="selectRepList" parameterType="Integer"
		resultMap="RepResultMap">
		select distinct(r.rep_id), r.rep_name, r.rep_url from
		repository r,member m,user_meta um
		where
		r.rep_id=um.rep_id and
		um.user_id=m.user_id and m.user_id=#{id}
	</select>
	<insert id="insertUserMeta2" parameterType="map">
		insert into
		user_meta2 values(#{user_id},#{rep_id},#{nickname})
	</insert>
	<select id="selectNickname" parameterType="map"
		resultType="String">
		select nickname from user_meta2 where user_id=#{id} and
		rep_id=#{rep_id}
	</select>
	<select id="selectChannel" parameterType="Integer"
		resultMap="ChResultMap">
		select *
		from channel
		where channel_id=(select min(channel_id) from channel where
		rep_id=#{rep_id})
	</select>
	<select id="selectNicknameList" parameterType="Integer" resultType="String">
	select nickname from user_meta2 where rep_id=#{rep_id}
	</select>




</mapper>