<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kitri.project.post.Mapper">
	<resultMap type="vo.Post" id="PostResultMap">
		<result property="post_id" column="post_id" />
		<result property="repost_id" column="repost_id" />
		<result property="nickname" column="nickname" />
		<result property="content" column="content" />
		<result property="user_id" column="user_id" />
		<result property="logdate" column="post_logdate" />
		<result property="update" column="update" />
		<result property="file_thumbnail" column="file_thumbnail" />
		<result property="file_original" column="fil_original" />
		<result property="post_status" column="post_status" />
		<result property="channel_id" column="channel_id" />
	</resultMap>
	<resultMap type="vo.Channel" id="ChResultMap">
		<result property="ch_id" column="channel_id" />
		<result property="ch_name" column="channel_name" />
		<result property="ch_type" column="channel_type" />
		<result property="ch_status" column="channel_status" />
		<result property="rep_id" column="rep_id" />
	</resultMap>
	<resultMap type="vo.Member" id="MemberResultMap">
		<result property="id" column="user_id" />
		<result property="email" column="user_email" />
		<result property="pwd" column="user_pass" />
		<result property="name" column="user_name" />
		<result property="tempkey" column="user_tempkey" />
		<result property="auth" column="user_auth" />
	</resultMap>
	<resultMap type="vo.Repository" id="RepResultMap">
		<result property="rep_id" column="rep_id" />
		<result property="rep_name" column="rep_name" />
		<result property="rep_url" column="rep_url" />
	</resultMap>
	<resultMap type="vo.UserMeta" id="UMResultMap">
		<result property="user_id" column="user_id" />
		<result property="rep_id" column="rep_id" />		
		<result property="channel_id" column="channel_id" />
		<result property="alarm_type" column="alarm_type" />
	</resultMap>

	<insert id="insert" parameterType="vo.Post">
		Insert into post
		values
		((select max(post_id) from post)+1,#{repost_id}, #{nickname},
		#{content},#{user_id},
		sysdate,null,#{file_thumbnail},#{file_original},1,#{channel_id})
	</insert>
	<select id="selectAll" parameterType="map"
		resultMap="PostResultMap">
		select * from (select rownum a, a.*
		from (select * from post where
		channel_id = ${cn} and repost_id = 0 order by post_logdate desc) a
		where rownum <![CDATA[<=]]>
		${endPage})b
		where b.a <![CDATA[>=]]>
		${startpage}
		order by post_logdate
	</select>
	<select id="selectAllMore" parameterType="map"
		resultMap="PostResultMap">
		select * from (select rownum a, a.*
		from (select * from post where
		channel_id = ${cn} and repost_id = 0 order by post_logdate desc) a
		where rownum <![CDATA[<=]]>
		${endPage})b
		where b.a <![CDATA[>=]]>
		${startpage}
		order by post_logdate desc
	</select>
	<select id="selectSearchResult" parameterType="map"
		resultMap="PostResultMap">
		select * from (select rownum a, a.*
		from (select p.*, c.channel_name from post p,channel c,repository r
		where p.channel_id=c.channel_id and r.rep_id=c.rep_id and r.rep_id=#{rep_id} and repost_id = 0
		and content like '%' || #{search} || '%'
		and p.post_status != 0
		order by post_id desc) a
		where rownum <![CDATA[<=]]> ${endPage})b
		where b.a <![CDATA[>=]]> ${startpage}
		order by post_logdate
	</select>
	<select id="selectSearchResultMore" parameterType="map"
		resultMap="PostResultMap">
		select * from (select rownum a, a.*
		from (select p.*, c.channel_name from post p,channel c,repository r
		where p.channel_id=c.channel_id and r.rep_id=c.rep_id and r.rep_id=#{rep_id} and repost_id = 0
		and content like '%' || #{search} || '%'
		and p.post_status != 0
		order by post_id desc) a
		where rownum <![CDATA[<=]]> ${endPage})b
		where b.a <![CDATA[>=]]> ${startpage}
		order by post_logdate desc
	</select>
	<update id="delete">
		update post set post_status=0 where
		post_id=#{post_id}
	</update>
	<select id="selectChannel" parameterType="Integer"
		resultMap="ChResultMap">
		select *
		from channel
		where channel_id=#{cn}
	</select>
	<select id="selectNicknameList" parameterType="map"
		resultType="String">
		select nickname from user_meta2 where rep_id=#{rep_id}
	</select>
	<select id="selectChList" parameterType="Integer"
		resultMap="ChResultMap">
		select * from channel where rep_id=#{rep_id} order by
		channel_id
	</select>
	<select id="selectNickname" parameterType="Integer"
		resultType="String">
		select nickname from user_meta2 where user_id=#{id} and
		rep_id=#{rep_id}
	</select>
	<select id="selectMember" parameterType="Integer"
		resultMap="MemberResultMap">
		select * from member where user_id=#{id}
	</select>
	<select id="selectRepository" parameterType="Integer"
		resultMap="RepResultMap">
		select * from repository where rep_id=#{rep_id}
	</select>
	<select id="selectFirstChannelId" parameterType="Integer" resultType="Integer">
	select min(channel_id) from channel where rep_id=#{rep_id}
	</select>
	<update id="update" parameterType="map">
	update post set content = #{content}, post_update = sysdate  where post_id = #{post_id}
	</update>
	<select id="selectRepList" parameterType="Integer"
		resultMap="RepResultMap">
		select distinct(r.rep_id), r.rep_name, r.rep_url from
		repository r,member m,user_meta um
		where
		r.rep_id=um.rep_id and
		um.user_id=m.user_id and m.user_id=#{id}
	</select>
	<select id="selectRepost" parameterType="list" resultMap="PostResultMap">
	select *
	from post
	where repost_id in 
	<foreach collection="list" item="item" open="(" close=")"
			separator=",">
			#{item.post_id}
		</foreach>
	order by post_logdate
	</select>
	<select id="selectUserAdminLevel" parameterType="map" resultType="Integer">
	select admin_level from user_meta2 where user_id=#{id} and rep_id=#{rep_id}
	</select>
	<insert id="repostInsert" parameterType="map">
		Insert into post
		values
		((select max(post_id) from post)+1,#{repost_id}, #{nickname},
		#{content},#{user_id},
		sysdate,null,'x','x',1,#{channel_id})
	</insert>
	<select id="selectRepostID" parameterType="Integer" resultType="Integer">
		select max(post_id) from post where user_id = #{user_id}
	<select id="selectUserMeta" parameterType="map" resultMap="UMResultMap">
	select * from user_meta where user_id=#{id} and rep_id=#{rep_id} and channel_id=#{ch_id}
	</select>
	<select id="selectMemberId" parameterType="map" resultType="Integer">
	select user_id from user_meta where channel_id=#{cn} and not user_id=#{id}  and alarm_type=1
	</select>
	<select id="selectMemberEmail" parameterType="map" resultType="String">
	select user_email from member where user_id in
	<foreach collection="idlist" item="type" open="(" close=")"
			separator=",">
			#{type.value}
		</foreach>
	</select>
	<select id="selectAlarmType" parameterType="map" resultType="Integer">
	select alarm_type from user_meta where rep_id=#{rep_id} and user_id=#{id} and channel_id in
	<foreach collection="cn" item="type" open="(" close=")"
			separator=",">
			#{type.value}
		</foreach>
	</select>
</mapper>